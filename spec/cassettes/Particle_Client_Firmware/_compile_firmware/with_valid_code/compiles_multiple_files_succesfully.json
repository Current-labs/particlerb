{"http_interactions":[{"request":{"method":"post","uri":"https://api.particle.io/v1/binaries","body":{"encoding":"UTF-8","string":"-------------RubyMultipartPost\r\nContent-Disposition: form-data; name=\"file\"; filename=\"code_with_lib.ino\"\r\nContent-Length: 195\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: binary\r\n\r\n#include \"led.h\"\n\nLED *myLed;\n\nvoid setup() {\n  myLed = new LED(D0);\n  Spark.function(\"toggle\", ledToggle);\n}\n\nint ledToggle(String argument) {\n  myLed->toggle();\n  return 0;\n}\n\nvoid loop() {\n\n}\n\r\n-------------RubyMultipartPost\r\nContent-Disposition: form-data; name=\"file1\"; filename=\"led.h\"\r\nContent-Length: 96\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: binary\r\n\r\nclass LED {\n  public:\n  LED(int pin);\n  void toggle();\n\n  private:\n  int pin;\n  bool state;\n};\n\n\r\n-------------RubyMultipartPost\r\nContent-Disposition: form-data; name=\"file2\"; filename=\"led.cpp\"\r\nContent-Length: 215\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: binary\r\n\r\n#include \"led.h\"\n#include \"application.h\"\n\nLED::LED(int pin) : pin(pin), state(false) {\n  pinMode(this->pin, OUTPUT);\n}\n\nvoid LED::toggle() {\n  this->state = !this->state;\n  digitalWrite(this->pin, this->state);\n}\n\n\r\n-------------RubyMultipartPost--\r\n\r\n"},"headers":{"User-Agent":["particlerb Ruby gem 0.0.3"],"Authorization":["Bearer __PARTICLE_ACCESS_TOKEN__"],"Content-Type":["multipart/form-data; boundary=-----------RubyMultipartPost"],"Content-Length":["1100"],"Accept-Encoding":["gzip;q=1.0,deflate;q=0.6,identity;q=0.3"],"Accept":["*/*"]}},"response":{"status":{"code":200,"message":"OK"},"headers":{"Server":["nginx/1.6.2"],"Date":["Sun, 28 Jun 2015 21:00:36 GMT"],"Content-Type":["application/json; charset=utf-8"],"Content-Length":["178"],"Connection":["keep-alive"],"X-Powered-By":["Express"],"Access-Control-Allow-Origin":["*"]},"body":{"encoding":"UTF-8","string":"{\n  \"ok\": true,\n  \"binary_id\": \"559060746b4ba27e4602c5a0\",\n  \"binary_url\": \"/v1/binaries/559060746b4ba27e4602c5a0\",\n  \"expires_at\": \"2015-06-29T21:00:36.287Z\",\n  \"sizeInfo\": \"\"\n}"},"http_version":null},"recorded_at":"Sun, 28 Jun 2015 21:00:36 GMT"}],"recorded_with":"VCR 2.9.3"}